{
  "files": [],
  "references": [
    { "path": "./tsconfig.app.json" },
    { "path": "./tsconfig.node.json" }
  ],

  "compilerOptions": {
    // 사용할 기본 라이브러리 (최신 자바스크립트 + DOM 관련 API)
    "lib": ["DOM", "DOM.Iterable", "ES2022"],

    // 전역 타입 정의할 패키지
    "types": ["node", "vite/client"], // Node.js, Vite 환경 타입

    // JS 문법을 어떤 버전까지 변환할지 (최신 ES2022)
    "target": "ES2022",

    // 모듈 시스템 (ES2022 모듈)
    "module": "ES2022",

    // 모듈을 어떻게 찾을지 → 번들러 방식 (Vite/Webpack 호환)
    "moduleResolution": "bundler",

    // React JSX 문법을 어떻게 처리할지 → 자동으로 `import React` 불필요
    "jsx": "react-jsx",

    // 여러 루트 디렉토리 지정 (여기선 현재 폴더 + React Router 타입 폴더)
    "rootDirs": [".", "./.react-router/types"],

    // 절대 경로 import 기준 (".") → 현재 폴더
    "baseUrl": ".",

    // import 시 경로 별칭 설정
    // 예: import Button from "~/components/Button"
    //     → 실제 경로: ./app/components/Button
    "paths": {
      "~/*": ["./app/*"]
    },

    // CommonJS/ESM 호환 (import/export 자유롭게 섞어쓰기 가능)
    "esModuleInterop": true,

    // import/export를 그대로 유지 (빌드 시 변환 최소화)
    "verbatimModuleSyntax": true,

    // 컴파일된 JS 파일을 내보내지 않음 (noEmit)
    "noEmit": true,

    // JSON 파일 import 허용
    "resolveJsonModule": true,

    // 외부 라이브러리 타입 검사 건너뜀 → 빌드 속도 향상
    "skipLibCheck": true,

    // 엄격 모드 (타입 체크 강화)
    "strict": true,

    //main.ts가 생성된다
    "sourceMap": true
  }
}


